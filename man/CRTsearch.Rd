% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CRTsampleSearch.R
\name{CRTsearch}
\alias{CRTsearch}
\title{Search for the optimal number of clusters}
\usage{
CRTsearch(nrep = 10000, nt, nc, tcRatio = 1, minpower = 0.8,
  alpha = 0.05, increaseSamplingBy = 1, PermutationTest = FALSE,
  Npermutationtest = 100, mcCores = parallel::detectCores() - 1, ...)
}
\arguments{
\item{nrep}{the number of replications of the simulation procedure for generating the pseudo study data, default is \code{"1000"})}

\item{nt}{the initial number of cluster in the treatment arm to start the search}

\item{nc}{the initial number of cluster in the control arm to start the search}

\item{tcRatio}{the ratio of number of clusters in the intervention arm vs that in the control arm, default value is \code{"1"} for balanced sample size allocation}

\item{minpower}{the minimum power, default at 0.8}

\item{alpha}{type-1 errer, default at 0.05}

\item{increaseSamplingBy}{the rate to increas the number of replications (nrep) when power gets close to the minpower, default at 1 (not increase)}

\item{PermutationTest}{indicator for if Fisher's sharp null hypothesis is test and permutation test power is of interest, default at FALSE (No)}

\item{Npermutationtest=100}{if a permutation test is of interest, the number of replications when estimating the permutation test power}
}
\value{
a list of (nt, nc, power) for the optimal design
}
\description{
Binary search for the optimal number of clusters for a two-arm CRT using simulations
}
\examples{
\dontrun{
## distribution of cluster sizes
sim_cluster_size=function(N, ...){
  size=round(100*rnorm(N, 0, 1), 0)
  size[size<=0]=1
  return(size)
}
## distribution of the two potential outcomes
sim_potential_outcomes=function(m,...){
  muibar=rnorm(1, 0, 1)
  Y0=rnorm(m, muibar, 10) 
  Y1=Y0 + 1
  re=cbind(Y0, Y1)
  colnames(re)=list("Y0", "Y1")
  return(re)
}

## Test statistics: pooled difference in the two study arms
calc_teststat=function(W, data, ...){
  Y0=data[,"Y0"]
  Y1=data[,"Y1"]
  re=sum(Y1[W==1])/sum(W==1) - sum(Y0[W==0])/sum(W==0)
  return(re)
}
## search for the optimal number of clusters 
CRTsearch(nrep=1e4, nt=10, nc=10, FUN_clustersize=sim_cluster_size, FUN_Ys=sim_potential_outcomes, FUN_TestStat=calc_teststat)
}
}
