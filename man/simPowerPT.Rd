% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CRTsampleSearch.R
\name{simPowerPT}
\alias{simPowerPT}
\title{estimate hypothesis test power for a CRT using simulation}
\usage{
simPowerPT(nrep = 10000, nt, nc, alpha = 0.05, FUN_TestStat,
  uppersided = NULL, Npermutationtest = 100, ...)
}
\arguments{
\item{nrep}{the number of replications of the simulation procedure for generating the pseudo study data, default is \code{"1000"})}

\item{nt}{the number of cluster in the treatment arm to start the search}

\item{nc}{the number of cluster in the control arm to start the search}

\item{alpha}{type-1 errer, default at 0.05}

\item{FUN_TestStat}{user-defined function for the test statistics, should take in two arguments, W=the treatment/control assignment indicator at the individual level; data=the dataset which includes the two potential outcomes at least
#' @param Npermutationtest the number of replications when estimating the permutation test power}

\item{uppersided}{if a uppersided test is of interest, default at NULL (two-sided test), FALSE if a lowersided test if of interest}

\item{minpower}{the minimum power, default at 0.8}
}
\value{
a vector (length=1) for the estimated power
}
\description{
estimate hypothesis test power for a Cluster Randomization Trail (CRT) given the number of clusters in the treatment arm and the control arm for the Fisher's shrap null hypothesis and permutation test
}
\examples{
\dontrun{
## distribution of cluster sizes
sim_cluster_size=function(N, ...){
  size=round(100*rnorm(N, 0, 1), 0)
  size[size<=0]=1
  return(size)
}
## distribution of the two potential outcomes
sim_potential_outcomes=function(m,...){
  muibar=rnorm(1, 0, 1)
  Y0=rnorm(m, muibar, 10) 
  Y1=Y0 + 1
  re=cbind(Y0, Y1)
  colnames(re)=list("Y0", "Y1")
  return(re)
}

## Test statistics: pooled difference in the two study arms
calc_teststat=function(W, data, ...){
  Y0=data[,"Y0"]
  Y1=data[,"Y1"]
  re=sum(Y1[W==1])/sum(W==1) - sum(Y0[W==0])/sum(W==0)
  return(re)
}
## search for the optimal number of clusters 
simPowerPT(nrep=1e4, nt=10, nc=10, FUN_clustersize=sim_cluster_size, FUN_Ys=sim_potential_outcomes, FUN_TestStat=calc_teststat)
}

}
